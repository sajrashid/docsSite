---
layout: layouts/base.njk
templateClass: tmpl-doc
---
<h1 class="docsH1">{{ title }}</h1>
<div class="topDocs">
<time datetime="{{ page.date | htmlDateString }}">{{ page.date | readableDate }}</time>
{%- for tag in tags | filterTagList -%}
{%- set tagUrl %}/tags/{{ tag | slug }}/{% endset -%}
<a href="{{ tagUrl | url }}" class="doc-tag">{{ tag }}</a>
{%- endfor %}
 </div>
<div class="side">
        <ul id="sideLi">
          {%- for doc in collections.docs | sortByOrder -%}
            <li>
              <a href="{{ doc.url }}">{{ doc.data.title }}</a>
            </li>
          {%- endfor -%}
        </ul>
      </div>
      <script>
        var c= document.getElementById("sideLi").childNodes;
        var title=document.getElementsByTagName("h1")[1].innerText;
        c.forEach(function(li){
         var a = li.firstChild.nextElementSibling.innerText;
        
        if(title==a){
          li.firstChild.nextElementSibling.classList.add("active");
        }
        });
       </script>
<div id="markdownContent"  class="markdownContent">
{{ content | safe }}
<div class='utterancesDiv'>
  <script src="//utteranc.es/client.js"
        repo="sajrashid/React-Dynamic-Json-Table"
        issue-term="pathname"
        theme="preferred-color-scheme"
        crossorigin="anonymous"
        async>
</script>
</div>
<div class="docspager">
{%- set nextdoc = collections.docs | getNextCollectionItem(page) %}
{%- set previousdoc = collections.docs | getPreviousCollectionItem(page) %}
{%- if nextdoc or previousdoc %}
<hr>
<ul>
  {%- if nextdoc %}<li>Next: <a href="{{ nextdoc.url | url }}">{{ nextdoc.data.title }}</a></li>{% endif %}
  {%- if previousdoc %}<li>Previous: <a href="{{ previousdoc.url | url }}">{{ previousdoc.data.title }}</a></li>{% endif %}
</ul>
{%- endif %}

<script>
  var elementsWorthCopying = document.querySelectorAll(".markdownContent .language-js");
// Main functionality

// Add click event listener for clicking the text
var styleSheetWrapperEl = document.getElementById('markdownContent');
styleSheetWrapperEl.addEventListener('click', function (e) {
  if (e.target.className === 'language-js' || e.target.className === 'language-html' ){
  var element = e.target;
    if (element.nodeName==="CODE") {
      flashElement(element);
      copyText(element);
    }
  };
});
 
// Main fun

function copyText(element) {
  var textToCopy = element.innerText;
  var myTemporaryInputElement = document.createElement("input");
  myTemporaryInputElement.type = "text";
  myTemporaryInputElement.value = textToCopy;
  document.body.appendChild(myTemporaryInputElement);
  myTemporaryInputElement.select();
  document.execCommand("Copy");
  document.body.removeChild(myTemporaryInputElement);
}
function flashElement(element) {
  element.classList.add("flash");
  document.addEventListener("transitionend", function() {
    setTimeout(function() {
      element.classList.remove("flash");
    }, 1000);
  });
}

  </script>
</div>

